--Query 1: Get the names of customers who have made more than 5 orders along with the names of the products they’ve ordered, sorted by the customer’s name.

SELECT C.NAME AS CUSTOMER_NAME,
	P.NAME AS PRODUCT_NAME
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN PRODUCTS P ON O.PRODUCT_ID = P.PRODUCT_ID
WHERE C.CUSTOMER_ID IN
		(SELECT CUSTOMER_ID
			FROM ORDERS
			GROUP BY CUSTOMER_ID
			HAVING COUNT(ORDER_ID) > 5)
ORDER BY C.NAME;

--Query 2: Get the names of customers and products along with the order date for orders made after ‘2024-02-15’, sorted by order date

SELECT C.NAME AS CUSTOMER_NAME,
	P.NAME AS PRODUCT_NAME,
	ORDER_DATE
FROM ORDERS O
JOIN PUBLIC.CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
JOIN PUBLIC.PRODUCTS P ON O.PRODUCT_ID = P.PRODUCT_ID
WHERE ORDER_DATE > '2024-02-15'
ORDER BY ORDER_DATE;

--Query 3: Products Never Ordered

SELECT P.PRODUCT_ID,
	P.NAME
FROM PUBLIC.PRODUCTS P
LEFT JOIN ORDERS O ON P.PRODUCT_ID = O.PRODUCT_ID
WHERE O.ORDER_ID IS NULL;

--Query 4: Get the total revenue generated from each product

SELECT P.NAME AS PRODUCT_NAME,
	SUM(P.UNIT_PRICE) AS TOTAL_REVENUE
FROM ORDERS O
JOIN PRODUCTS P ON O.PRODUCT_ID = P.PRODUCT_ID
GROUP BY PRODUCT_NAME;

--Query 5: Total Sales Per Product

SELECT P.PRODUCT_ID,
	P.NAME,
	SUM(UNIT_PRICE) AS TOTAL_SALES
FROM PUBLIC.ORDERS O
JOIN PUBLIC.PRODUCTS P ON O.PRODUCT_ID = P.PRODUCT_ID
GROUP BY P.PRODUCT_ID,
	P.NAME
ORDER BY P.PRODUCT_ID,
	P.NAME ASC;

--Query 6: Get the total number of orders per location (CTE)
 WITH LOCATION_ORDERS AS
	(SELECT LOCATION_ID,
			COUNT(ORDER_ID) AS TOTAL_ORDERS
		FROM ORDERS
		GROUP BY LOCATION_ID)
SELECT LOCATION.NAME,
	LOCATION_ORDERS.TOTAL_ORDERS
FROM LOCATION
JOIN LOCATION_ORDERS ON LOCATION.LOCATION_ID = LOCATION_ORDERS.LOCATION_ID;

--Query 7: Total Revenue Per Location

SELECT L.NAME,
	SUM(P.UNIT_PRICE) AS TOTAL_REVENUE
FROM PUBLIC.ORDERS O
JOIN PUBLIC.LOCATION L ON O.LOCATION_ID = L.LOCATION_ID
JOIN PUBLIC.PRODUCTS P ON O.PRODUCT_ID = P.PRODUCT_ID
GROUP BY L.NAME;

--Query 8: Create a view that shows the total sales per customer

CREATE VIEW CUSTOMER_SALES AS
SELECT C.NAME AS CUSTOMER_NAME,
	COUNT(O.ORDER_ID) AS TOTAL_ORDERS,
	SUM(P.UNIT_PRICE) AS TOTAL_SALES
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN PRODUCTS P ON O.PRODUCT_ID = P.PRODUCT_ID
GROUP BY C.NAME
ORDER BY C.NAME;

--Query 9: Average Order Value

SELECT AVG(UNIT_PRICE) AS AVG_ORDER_VALUE
FROM ORDERS O
JOIN PRODUCTS P ON O.PRODUCT_ID = P.PRODUCT_ID;

--Query 10: Create a view to get the details of all orders, including the customer name, product name, unit price, location name, and order date.

CREATE VIEW ORDER_DETAILS AS
SELECT O.ORDER_ID,
	C.NAME AS CUSTOMER_NAME,
	P.NAME AS PRODUCT_NAME,
	P.UNIT_PRICE,
	L.NAME AS LOCATION_NAME,
	O.ORDER_DATE
FROM ORDERS O
JOIN CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
JOIN PRODUCTS P ON O.PRODUCT_ID = P.PRODUCT_ID
JOIN LOCATION L ON O.LOCATION_ID = L.LOCATION_ID;